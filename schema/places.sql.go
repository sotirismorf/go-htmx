// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: places.sql

package schema

import (
	"context"
)

const selectPlaces = `-- name: SelectPlaces :many
SELECT id, name FROM places ORDER BY id
`

func (q *Queries) SelectPlaces(ctx context.Context) ([]Place, error) {
	rows, err := q.db.Query(ctx, selectPlaces)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Place
	for rows.Next() {
		var i Place
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
